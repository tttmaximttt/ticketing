name: deploy-auth
on:
  push:
    branches:
      - main
    paths:
      - 'auth/**'
      - '.github/workflows/**'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
          token: ${{secrets.GITHUB_TOKEN}}
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: eu-central-1
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Create .npmrc file
        run: |
          cd auth
          export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain mr --domain-owner ${{secrets.AWS_DOMAIN_OWNER}} --region eu-central-1 --query authorizationToken --output text`
          echo "registry=https://mr-${{secrets.AWS_DOMAIN_OWNER}}.d.codeartifact.eu-central-1.amazonaws.com/npm/npm_private/" > ~/.npmrc
#          echo "//mr-${{secrets.AWS_DOMAIN_OWNER}}.d.codeartifact.eu-central-1.amazonaws.com/npm/npm_private/:always-auth=true" >> ~/.npmrc
#          echo "//mr-${{secrets.AWS_DOMAIN_OWNER}}.d.codeartifact.eu-central-1.amazonaws.com/npm/npm_private/:_authToken=$CODEARTIFACT_AUTH_TOKEN" >> ~/.npmrc
          cat .npmrc
#      - name: Build, tag, and push docker image to Amazon ECR
#        env:
#          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          REPOSITORY: ticketing
#          IMAGE_TAG: ${{ github.sha }}
#        run: |
#          cd auth
#          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
#          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
